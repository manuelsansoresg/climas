/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/components/cart.js":
/*!*****************************************!*\
  !*** ./resources/js/components/cart.js ***!
  \*****************************************/
/***/ (() => {

eval("document.addEventListener('DOMContentLoaded', function () {\n  // Funcionalidad para agregar al carrito\n  var btn = document.getElementById('add-to-cart-btn');\n  if (btn) {\n    var quantityInput = document.getElementById('quantity');\n    var stockDisplay = document.getElementById('stock-display');\n    var availableStock = parseInt(btn.getAttribute('data-stock') || '0');\n\n    // Actualizar el display de stock si existe\n    if (stockDisplay) {\n      stockDisplay.textContent = \"Stock disponible: \".concat(availableStock);\n    }\n\n    // Validar cantidad al cambiar el input\n    if (quantityInput) {\n      quantityInput.addEventListener('input', function () {\n        var value = parseInt(this.value);\n        if (value > availableStock) {\n          this.value = availableStock;\n          value = availableStock;\n        }\n        if (value < 1 || isNaN(value)) {\n          this.value = 1;\n        }\n      });\n    }\n    btn.addEventListener('click', function () {\n      var productId = btn.getAttribute('data-product-id');\n      var url = btn.getAttribute('data-url');\n      var csrfToken = btn.getAttribute('data-csrf');\n      var quantity = parseInt((quantityInput === null || quantityInput === void 0 ? void 0 : quantityInput.value) || '1');\n\n      // Validar stock en backend antes de agregar\n      fetch(\"/api/product/\".concat(productId, \"/stock\")).then(function (res) {\n        return res.json();\n      }).then(function (stockData) {\n        availableStock = parseInt(stockData.stock);\n        btn.setAttribute('data-stock', availableStock);\n        if (stockDisplay) {\n          stockDisplay.textContent = \"Stock disponible: \".concat(availableStock);\n        }\n        quantityInput.max = availableStock;\n        if (quantity > availableStock) {\n          alert(\"Error: Solo hay \".concat(availableStock, \" unidades disponibles\"));\n          quantityInput.value = availableStock > 0 ? availableStock : 1;\n          return;\n        }\n\n        // Mostrar indicador de carga\n        btn.disabled = true;\n        btn.innerHTML = '<span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> Agregando...';\n        fetch(url, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-CSRF-TOKEN': csrfToken\n          },\n          body: JSON.stringify({\n            product_id: productId,\n            quantity: quantity\n          })\n        }).then(function (response) {\n          if (!response.ok) {\n            return response.json().then(function (err) {\n              return Promise.reject(err);\n            });\n          }\n          return response.json();\n        }).then(function (data) {\n          // Restaurar el botón\n          btn.disabled = false;\n          btn.innerHTML = 'Agregar al carrito';\n\n          // Mostrar mensaje de éxito o advertencia\n          var alertDiv = document.createElement('div');\n          if (data.message && data.message.includes('ya fue agregado')) {\n            alertDiv.className = 'alert alert-warning alert-dismissible fade show';\n          } else {\n            alertDiv.className = 'alert alert-success alert-dismissible fade show';\n          }\n          alertDiv.innerHTML = \"\\n                            \".concat(data.message, \"\\n                            <button type=\\\"button\\\" class=\\\"btn-close\\\" data-bs-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\"></button>\\n                        \");\n          var container = document.querySelector('.container');\n          var card = document.querySelector('.card');\n          if (container) {\n            if (card && card.parentNode === container) {\n              container.insertBefore(alertDiv, card);\n            } else {\n              container.insertBefore(alertDiv, container.firstChild);\n            }\n          }\n\n          // Redirigir si es necesario\n          if (data.redirect) {\n            window.location.href = data.redirect;\n          }\n        })[\"catch\"](function (error) {\n          // Restaurar el botón\n          btn.disabled = false;\n          btn.innerHTML = 'Agregar al carrito';\n\n          // Mostrar mensaje de error\n          var alertDiv = document.createElement('div');\n          alertDiv.className = 'alert alert-danger alert-dismissible fade show';\n          alertDiv.innerHTML = \"\\n                            \".concat(error.message || 'Error al agregar al carrito', \"\\n                            <button type=\\\"button\\\" class=\\\"btn-close\\\" data-bs-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\"></button>\\n                        \");\n          var container = document.querySelector('.container');\n          var card = document.querySelector('.card');\n          if (container) {\n            if (card && card.parentNode === container) {\n              container.insertBefore(alertDiv, card);\n            } else {\n              container.insertBefore(alertDiv, container.firstChild);\n            }\n          }\n        });\n      });\n    });\n  }\n\n  // Funcionalidad para validar cantidad en el carrito\n  var quantityForms = document.querySelectorAll('.quantity-form');\n  quantityForms.forEach(function (form) {\n    var input = form.querySelector('.quantity-input');\n    var updateBtn = form.querySelector('.update-btn');\n    var stockBadge = form.querySelector('.stock-badge');\n    var stockWarning = form.querySelector('.stock-warning');\n    var stockValue = form.querySelector('.stock-value');\n    var maxStock = parseInt(input.getAttribute('data-current-stock'));\n    function validateQuantity() {\n      if (isNaN(maxStock) || maxStock < 1) {\n        stockValue.textContent = 'Sin stock';\n        stockBadge.classList.remove('bg-secondary', 'bg-danger');\n        stockBadge.classList.add('bg-dark', 'text-white');\n        input.disabled = true;\n        updateBtn.disabled = true;\n        stockWarning.classList.add('d-none');\n        return;\n      }\n      stockValue.textContent = maxStock;\n      input.disabled = false;\n      var value = parseInt(input.value);\n      if (value > maxStock) {\n        input.value = maxStock;\n        stockBadge.classList.remove('bg-secondary');\n        stockBadge.classList.add('bg-danger');\n        stockBadge.classList.add('text-white');\n        stockWarning.classList.remove('d-none');\n        updateBtn.disabled = true;\n      } else {\n        stockBadge.classList.remove('bg-danger');\n        stockBadge.classList.add('bg-secondary');\n        stockBadge.classList.add('text-white');\n        stockWarning.classList.add('d-none');\n        updateBtn.disabled = false;\n      }\n    }\n\n    // Validar al cargar\n    validateQuantity();\n    // Validar en cada cambio\n    input.addEventListener('input', validateQuantity);\n  });\n\n  // Funcionalidad para cerrar alertas\n  document.querySelectorAll('.alert .close-btn, .alert .btn-close').forEach(function (btn) {\n    btn.addEventListener('click', function () {\n      this.closest('.alert').style.display = 'none';\n    });\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/components/cart.js\n");

/***/ }),

/***/ "./resources/js/principal.js":
/*!***********************************!*\
  !*** ./resources/js/principal.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("__webpack_require__(/*! ./components/cart */ \"./resources/js/components/cart.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvcHJpbmNpcGFsLmpzIiwibWFwcGluZ3MiOiJBQUFBQSxtQkFBTyxDQUFDLDREQUFtQixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2pzL3ByaW5jaXBhbC5qcz8yZjY4Il0sInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4vY29tcG9uZW50cy9jYXJ0Jyk7Il0sIm5hbWVzIjpbInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/principal.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/js/principal.js");
/******/ 	
/******/ })()
;